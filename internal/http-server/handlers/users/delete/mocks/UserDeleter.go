// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UserDeleter is an autogenerated mock type for the UserDeleter type
type UserDeleter struct {
	mock.Mock
}

// DeleteUser provides a mock function with given fields: userID
func (_m *UserDeleter) DeleteUser(userID int64) (int64, error) {
	ret := _m.Called(userID)

	var r0 int64
	var r1 error
	if rf, ok := ret.Get(0).(func(int64) (int64, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(int64) int64); ok {
		r0 = rf(userID)
	} else {
		r0 = ret.Get(0).(int64)
	}

	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewUserDeleter interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserDeleter creates a new instance of UserDeleter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserDeleter(t mockConstructorTestingTNewUserDeleter) *UserDeleter {
	mock := &UserDeleter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
